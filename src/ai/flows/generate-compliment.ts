
// This is an autogenerated file from Firebase Studio.
'use server';
/**
 * @fileOverview A flow to generate a witty, Gen Z compliment for solving a math question correctly.
 *
 * - generateCompliment - A function that generates a compliment.
 * - GenerateComplimentInput - The input type for the generateCompliment function.
 * - GenerateComplimentOutput - The return type for the generateCompliment function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const GenerateComplimentInputSchema = z.object({
  question: z.string().describe('The math question that was solved.'),
  answer: z.number().describe('The correct answer to the math question.'),
});
export type GenerateComplimentInput = z.infer<typeof GenerateComplimentInputSchema>;

const GenerateComplimentOutputSchema = z.object({
  compliment: z.string().describe('A witty, creative, and varied Gen Z compliment in Roman Urdu for solving the math question correctly.'),
});
export type GenerateComplimentOutput = z.infer<typeof GenerateComplimentOutputSchema>;

export async function generateCompliment(input: GenerateComplimentInput): Promise<GenerateComplimentOutput> {
  return generateComplimentFlow(input);
}

const prompt = ai.definePrompt({
  name: 'generateComplimentPrompt',
  input: {schema: GenerateComplimentInputSchema},
  output: {schema: GenerateComplimentOutputSchema},
  prompt: `You are a Gen Z chatbot. The user has just solved the following math question correctly: {{{question}}} The answer was {{{answer}}}. Give the user a single, witty, Gen Z compliment in Roman Urdu. Be creative and try to use different phrasing each time. Avoid overly common or repetitive lead-ins. Make it sound fresh!`,
});

const generateComplimentFlow = ai.defineFlow(
  {
    name: 'generateComplimentFlow',
    inputSchema: GenerateComplimentInputSchema,
    outputSchema: GenerateComplimentOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
